(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{428:function(v,_,t){"use strict";t.r(_);var r=t(54),a=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"机器学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#机器学习"}},[v._v("#")]),v._v(" 机器学习")]),v._v(" "),t("p",[v._v("我们常常会把人工智能、机器学习和深度学习的概念混淆，其实人工智能、机器学习和深度学习是三个相关但不同的概念。人工智能是指计算机系统能够模拟人类智能的能力，包括感知、推理、学习和决策等方面。机器学习是一种人工智能的方法，它通过对大量数据的分析和学习，自动发现数据中的规律和模式，并用于预测和决策等任务。深度学习是机器学习的一种方法，它通过构建多层神经网络模型，实现对数据的高级抽象和表征学习，进而提高模型的准确性和泛化能力，它属于机器学习解决图像、语音、文本等领域的一个重要分支。因此，可以说深度学习是机器学习的一种形式，而机器学习又是人工智能的一种方法。在实际应用中，人工智能、机器学习和深度学习通常是相互结合的，以实现更加高效和精确的智能决策和预测等任务。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://s3.bmp.ovh/imgs/2023/05/23/08eb2be8fc3a5556.png",alt:""}})]),v._v(" "),t("h2",{attrs:{id:"机器学习的类别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#机器学习的类别"}},[v._v("#")]),v._v(" 机器学习的类别")]),v._v(" "),t("p",[v._v("下面我们来着重的介绍一下机器学习的几个类别，基于学习方式划分，机器学习可以分为"),t("strong",[v._v("有监督学习、无监督学习和强化学习")]),v._v("，从学习策略划分，机器学习可以分为"),t("strong",[v._v("传统机器学习和深度学习")]),v._v("。")]),v._v(" "),t("h3",{attrs:{id:"有监督学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有监督学习"}},[v._v("#")]),v._v(" 有监督学习")]),v._v(" "),t("p",[v._v("有监督学习是机器学习的一个分支，它是指在训练数据中，每个样本都有一个标签或者目标输出，模型需要学习如何从输入数据中预测出正确的输出。有监督学习过程可以分为两个阶段：训练和预测。在训练阶段，模型会使用一组标记好的数据集，来学习如何将输入数据映射到正确的输出标签，训练数据集通常被分为训练集和验证集，训练集用于训练模型，验证集用于评估模型的性能和调整模型的参数。在预测阶段，模型会使用之前学习到的特征，来对新的数据进行预测，模型会将输入数据映射到一个输出标签，这个标签可以是一个数字、一个类别、一个文本或者一个图像。有监督学习在很多领域都有广泛的应用，比如图像识别、语音识别、自然语言处理、推荐系统等等。有监督学习的算法有很多种，下面列举一些常用的算法：")]),v._v(" "),t("ol",[t("li",[v._v("线性回归 (Linear Regression)")]),v._v(" "),t("li",[v._v("逻辑回归 (Logistic Regression)")]),v._v(" "),t("li",[v._v("决策树 (Decision Tree)")]),v._v(" "),t("li",[v._v("随机森林 (Random Forest)")]),v._v(" "),t("li",[v._v("支持向量机 (Support Vector Machine, SVM)")]),v._v(" "),t("li",[v._v("朴素贝叶斯 (Naive Bayes)")]),v._v(" "),t("li",[v._v("k-近邻算法 (k-Nearest Neighbor, KNN)")]),v._v(" "),t("li",[v._v("神经网络 (Neural Network)")])]),v._v(" "),t("p",[v._v("每个算法都有自己的特点和适用场景。例如，线性回归适用于预测连续变量的值，逻辑回归适用于二分类问题，决策树适用于分类和回归问题等。在实际应用中，我们需要根据具体的问题和数据特点选择合适的算法来解决问题。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://s3.bmp.ovh/imgs/2023/05/23/c02c6f90fbcd293d.png",alt:""}})]),v._v(" "),t("h3",{attrs:{id:"无监督学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无监督学习"}},[v._v("#")]),v._v(" 无监督学习")]),v._v(" "),t("p",[v._v("无监督学习是指在训练数据中没有标签或目标输出，模型需要自己从数据中发现规律和模式。无监督学习的学习过程可以分为聚类、降维和关联规则挖掘等几个方面。在聚类中，模型会将数据集中的样本分成不同的组，使得同一组内的样本之间相似度高，不同组之间相似度低。在降维中，模型会将高维度数据转化为低纬数据，以便更好地进行可视化和分析。在关联规则挖掘中，模型会从数据集中发现出现频率较高的项集和规则。无监督学习在很多领域都有广泛的应用，比如数据挖掘、图像处理、自然语言处理等。例如，在数据挖掘领域，无监督学习可以用于发现数据集中的异常值、发现数据集中的模式和规律等；在图像处理领域，无监督学习可以用于图像分割、图像去噪等任务。以下是一些常用的无监督学习算法：")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("聚类算法")]),v._v("：K-Means、层次聚类等。")]),v._v(" "),t("li",[t("strong",[v._v("降维算法")]),v._v("：主成分分析（PCA）、独立成分分析（ICA）、t-SNE等。")]),v._v(" "),t("li",[t("strong",[v._v("关联规则学习算法")]),v._v("：Apriori算法、FP-Growth算法等。")]),v._v(" "),t("li",[t("strong",[v._v("概率图模型算法")]),v._v("：贝叶斯网络、隐马尔可夫模型（HMM）等。")]),v._v(" "),t("li",[t("strong",[v._v("神经网络算法")]),v._v("：自编码器、受限玻尔兹曼机（RBM）等。")])]),v._v(" "),t("p",[v._v("以上算法在无监督学习中都有广泛的应用，可以用于数据挖掘、图像处理、自然语言处理等领域。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://s3.bmp.ovh/imgs/2023/05/23/972605ff80fd7375.png",alt:""}})]),v._v(" "),t("h3",{attrs:{id:"强化学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强化学习"}},[v._v("#")]),v._v(" 强化学习")]),v._v(" "),t("p",[v._v("强化学习是一种机器学习方法，其目标是通过与环境的交互来学习如何做出最优的决策。在强化学习中，一个智能体（agent）通过观察环境的状态（state），执行动作（action），获得奖励（reward）来学习如何在不同状态下选择最优的动作，从而使累计奖励最大化。强化学习的学习过程可以分为以下几个步骤：")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("环境建模")]),v._v("：将环境抽象成状态、动作和奖励的形式，构建强化学习模型。")]),v._v(" "),t("li",[t("strong",[v._v("策略选择")]),v._v("：通过选择最优的策略来最大化累计奖励。")]),v._v(" "),t("li",[t("strong",[v._v("奖励计算")]),v._v("：根据智能体的行为，计算相应的奖励。")]),v._v(" "),t("li",[t("strong",[v._v("状态更新")]),v._v("：根据智能体的行为和环境的反馈，更新当前状态。")]),v._v(" "),t("li",[t("strong",[v._v("动作执行")]),v._v("：根据选择的策略，在当前状态下执行相应的动作。")])]),v._v(" "),t("p",[v._v("强化学习在许多领域都有广泛的应用，例如：")]),v._v(" "),t("ul",[t("li",[v._v("游戏：如围棋、扑克等，强化学习可以通过与环境的交互来学习最优的决策策略。")]),v._v(" "),t("li",[v._v("机器人控制：强化学习可以帮助机器人学习在不同环境下如何做出最优的决策。")]),v._v(" "),t("li",[v._v("自然语言处理：强化学习可以用于机器翻译、对话系统等领域，通过与用户的交互来学习最优的响应策略。")]),v._v(" "),t("li",[v._v("金融领域：强化学习可以应用于股票交易、风险管理等领域，通过学习最优的决策策略来获取更高的收益或降低风险。")])]),v._v(" "),t("p",[v._v("强化学习目标是通过与环境的交互来学习如何做出最优的决策。以下是一些常用的强化学习算法：")]),v._v(" "),t("ol",[t("li",[v._v("Q-learning算法：Q-learning是一种基于值函数的强化学习算法，通过学习动作值函数来选择最优的动作。")]),v._v(" "),t("li",[v._v("SARSA算法：SARSA是一种基于策略的强化学习算法，通过学习策略函数来选择最优的动作。")]),v._v(" "),t("li",[v._v("Actor-Critic算法：Actor-Critic是一种结合了策略梯度和值函数的强化学习算法，可以同时学习策略和值函数。")]),v._v(" "),t("li",[v._v("Deep Q-Network（DQN）算法：DQN是一种基于深度学习的强化学习算法，通过使用神经网络来学习动作值函数，可以处理高维度的状态空间。")]),v._v(" "),t("li",[v._v("Policy Gradient算法：Policy Gradient是一种基于策略的强化学习算法，通过直接优化策略函数来选择最优的动作。")])]),v._v(" "),t("p",[v._v("以上算法在强化学习中都有广泛的应用，可以用于游戏、机器人控制、自然语言处理等领域。不同的算法适用于不同的场景，需要根据具体的问题选择合适的算法。")]),v._v(" "),t("h3",{attrs:{id:"深度学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深度学习"}},[v._v("#")]),v._v(" 深度学习")]),v._v(" "),t("p",[v._v("深度学习利用多层神经网络对数据进行建模和学习。深度学习的核心是通过反向传播算法来训练神经网络，从而实现对数据的分类、识别、预测等任务。深度学习的学习过程可以分为两个阶段："),t("strong",[v._v("训练和推理")]),v._v("。在训练阶段，我们通过输入大量的数据和标签来训练神经网络，不断调整神经网络中的参数，使其能够更好地拟合数据。在推理阶段，我们使用训练好的神经网络来对新的数据进行分类、识别、预测等任务。")]),v._v(" "),t("p",[v._v("深度学习在许多领域都有广泛的应用，比如图像识别、语音识别、自然语言处理、推荐系统等。例如，在图像识别领域，深度学习可以通过卷积神经网络来识别图像中的物体、人脸等；在自然语言处理领域，深度学习可以通过循环神经网络和长短时记忆网络来实现文本分类、情感分析、机器翻译等任务。深度学习中常用的算法有很多，以下是一些常见的算法：")]),v._v(" "),t("ol",[t("li",[v._v("卷积神经网络（Convolutional Neural Networks，CNN）：主要用于图像识别和计算机视觉领域，通过卷积操作提取图像特征，并使用池化操作减少参数数量。")]),v._v(" "),t("li",[v._v("循环神经网络（Recurrent Neural Networks，RNN）：主要用于序列数据的处理，如自然语言处理和语音识别，通过记忆单元来处理序列信息。")]),v._v(" "),t("li",[v._v("长短时记忆网络（Long Short-Term Memory，LSTM）：是一种特殊的RNN，能够更好地处理长序列数据，通过门控机制来控制信息的流动。")]),v._v(" "),t("li",[v._v("自编码器（Autoencoder）：主要用于特征提取和数据降维，通过编码和解码操作来学习数据的低维表示。")]),v._v(" "),t("li",[v._v("深度信念网络（Deep Belief Networks，DBN）：主要用于无监督学习，通过堆叠多个受限玻尔兹曼机来学习数据的分布。")]),v._v(" "),t("li",[v._v("生成对抗网络（Generative Adversarial Networks，GAN）：主要用于生成新的数据，通过两个神经网络的对抗学习来生成逼真的数据。")])]),v._v(" "),t("h2",{attrs:{id:"机器学习常用函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#机器学习常用函数"}},[v._v("#")]),v._v(" 机器学习常用函数")]),v._v(" "),t("h3",{attrs:{id:"损失函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#损失函数"}},[v._v("#")]),v._v(" 损失函数")]),v._v(" "),t("p",[v._v("损失函数（loss function）用来估量模型的预测结果和真实结果不一致程度，是一个非负值实数，当预测结果越接近真实结果时，损失函数值越小，反之，当预测结果与真实结果之间差距越大时，损失函数值越大。")]),v._v(" "),t("p",[v._v("损失函数是机器学习中非常重要的一个概念，因为它是机器学习算法中的优化目标，在训练机器学习模型时，我们的目标是最小化损失函数的值，从而使模型的预测结果更加准确，常见的损失函数包括均方误差（Mean Squared Error，MSE）、交叉熵（Cross Entropy）、对数损失（Logarithmic Loss）等。不同的损失函数适用于不同的机器学习任务，例如回归、分类、聚类等。以下是常见的损失函数：")]),v._v(" "),t("p",[t("strong",[v._v("回归算法")])]),v._v(" "),t("ul",[t("li",[v._v("均方误差（Mean Squared Error，MSE）：MSE是最常见的回归损失函数，用于衡量预测值与真实值之间的均方误差。")]),v._v(" "),t("li",[v._v("平均绝对误差（Mean Absolute Error，MAE）：MAE用于衡量预测值与真实值之间的平均绝对误差。\n"),t("strong",[v._v("聚类算法")])]),v._v(" "),t("li",[v._v("K-means损失函数：K-means算法的损失函数是样本到聚类中心的距离之和。")]),v._v(" "),t("li",[v._v("DBSCAN损失函数：DBSCAN算法的损失函数是簇的密度。\n"),t("strong",[v._v("分类算法")]),v._v("：")]),v._v(" "),t("li",[v._v("交叉熵（Cross Entropy）：交叉熵是用于衡量分类问题中预测值与真实值之间的差距的常用损失函数。")]),v._v(" "),t("li",[v._v("对数损失（Logarithmic Loss）：对数损失也是用于衡量分类问题中预测值与真实值之间的差距的常用损失函数。")])]),v._v(" "),t("h3",{attrs:{id:"优化函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化函数"}},[v._v("#")]),v._v(" 优化函数")]),v._v(" "),t("p",[v._v("优化函数是指用于训练模型的一种数学函数，其目的是通过调整模型参数，使得模型的预测结果与真实结果之间的误差最小化。优化函数通常被用来计算模型的损失函数（loss function），即模型在训练集上的预测误差，然后通过梯度下降等算法来调整模型参数，使得损失函数最小化。常见的优化函数包括梯度下降、随机梯度下降、Adam、Adagrad等。不同的优化函数适用于不同的机器学习任务和模型，选择合适的优化函数可以提高模型的训练效率和性能。")]),v._v(" "),t("p",[t("strong",[v._v("优化函数的执行过程通常包括以下步骤")]),v._v("：")]),v._v(" "),t("ol",[t("li",[v._v("初始化参数：首先需要对模型参数进行初始化，通常是随机初始化。")]),v._v(" "),t("li",[v._v("计算梯度：然后需要计算模型在训练集上的损失函数关于模型参数的梯度，即损失函数对每个参数的偏导数。")]),v._v(" "),t("li",[v._v("更新参数：接着使用优化算法更新模型参数，使损失函数最小化。常见的优化算法包括梯度下降、随机梯度下降、Adam、Adagrad等。")]),v._v(" "),t("li",[v._v("重复迭代：重复执行步骤2和3，直到达到预设的停止条件，例如达到最大迭代次数或损失函数收敛。")])]),v._v(" "),t("p",[t("strong",[v._v("常用的机器学习中的优化函数包括")]),v._v("：")]),v._v(" "),t("ol",[t("li",[v._v("梯度下降（Gradient Descent）：梯度下降是最基本的优化算法之一。它的思想是沿着损失函数的梯度方向更新模型参数，以最小化损失函数。梯度下降算法分为批量梯度下降、随机梯度下降和小批量梯度下降三种形式。")]),v._v(" "),t("li",[v._v("随机梯度下降（Stochastic Gradient Descent，SGD）：随机梯度下降是梯度下降算法的一种变体。它在每一次迭代中只使用一个样本来计算梯度，因此计算速度更快。但由于梯度的随机性，随机梯度下降的收敛速度可能会比批量梯度下降慢。")]),v._v(" "),t("li",[v._v("Adam：Adam是一种自适应学习率的优化算法。它结合了动量法和自适应学习率的优点，能够快速收敛，并且对于不同的参数具有不同的学习率。Adam算法的核心思想是根据梯度的一阶矩估计和二阶矩估计来更新模型参数。")]),v._v(" "),t("li",[v._v("Adagrad：Adagrad是一种自适应学习率的优化算法。它根据每个参数的历史梯度信息来自适应地调整学习率，能够有效地处理稀疏梯度问题。但由于学习率会不断减小，可能会导致训练过程过早停止。")]),v._v(" "),t("li",[v._v("RMSprop：RMSprop是一种自适应学习率的优化算法。它根据梯度的平方和的滑动平均来自适应地调整学习率，能够有效地处理非平稳目标函数。RMSprop算法在处理长序列数据时比Adagrad更稳定。")])]),v._v(" "),t("p",[t("strong",[v._v("具体来说，梯度下降算法是最基本的优化算法之一。它的执行过程如下")]),v._v("：")]),v._v(" "),t("ol",[t("li",[v._v("随机初始化模型参数。")]),v._v(" "),t("li",[v._v("计算损失函数关于模型参数的梯度。")]),v._v(" "),t("li",[v._v("根据梯度方向和学习率更新模型参数。")]),v._v(" "),t("li",[v._v("重复执行步骤2和3，直到达到预设的停止条件。")])]),v._v(" "),t("p",[v._v("在执行过程中，需要注意调整学习率和其他超参数，以确保算法能够收敛到最优解，并避免过拟合或欠拟合的问题。")]),v._v(" "),t("h2",{attrs:{id:"模型的评估指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模型的评估指标"}},[v._v("#")]),v._v(" 模型的评估指标")]),v._v(" "),t("p",[v._v("机器学习的评估指标是用来评估机器学习算法性能的指标。在机器学习中，我们通常将数据分为训练集和测试集，利用训练集训练模型，然后利用测试集来评估模型的性能。机器学习的评估指标主要分为分类、回归和无监督三类。")]),v._v(" "),t("h3",{attrs:{id:"分类问题的评估指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分类问题的评估指标"}},[v._v("#")]),v._v(" 分类问题的评估指标")]),v._v(" "),t("p",[v._v("分类问题是指将数据分为若干个类别的问题，常见的评估指标包括：")]),v._v(" "),t("ul",[t("li",[v._v("准确率（Accuracy）：分类正确的样本数占总样本数的比例。")]),v._v(" "),t("li",[v._v("精确率（Precision）：正确预测为正类的样本数占预测为正类的样本数的比例。")]),v._v(" "),t("li",[v._v("召回率（Recall）：正确预测为正类的样本数占真实为正类的样本数的比例。")]),v._v(" "),t("li",[v._v("F1-score：精确率和召回率的加权平均值，用于综合评估模型的性能。")]),v._v(" "),t("li",[v._v("ROC曲线和AUC值：ROC曲线是以假正率为横坐标，真正率为纵坐标画出的曲线，AUC（Area Under Curve）是ROC曲线下的面积，用于评估分类器的性能。")]),v._v(" "),t("li",[v._v("混淆矩阵：将分类器的分类结果以表格的形式呈现，其中行表示真实标签，列表示预测标签，用于直观地了解分类器的分类情况。")])]),v._v(" "),t("p",[v._v("混淆矩阵（Confusion Matrix）是一种常用的分类模型性能评估方法，它可以用来对分类器的性能进行评估。混淆矩阵由四个元素组成，分别是真正例（True Positive，TP）、假正例（False Positive，FP）、真反例（True Negative，TN）和假反例（False Negative，FN）。其中，真正例表示被分类器正确地判定为正例的样本数，假正例表示被分类器错误地判定为正例的样本数，真反例表示被分类器正确地判定为反例的样本数，假反例表示被分类器错误地判定为反例的样本数。混淆矩阵如下所示：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th"),v._v(" "),t("th",[v._v("预测为正例")]),v._v(" "),t("th",[v._v("预测为反例")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("真实为正例")]),v._v(" "),t("td",[v._v("TP（预测值为真、实际值为真）")]),v._v(" "),t("td",[v._v("FN（预测值为真、实际值为假）")])]),v._v(" "),t("tr",[t("td",[v._v("真实为反例")]),v._v(" "),t("td",[v._v("FP（预测值为假、实际值为真）")]),v._v(" "),t("td",[v._v("TN（预测值为假、实际值为假）")])])])]),v._v(" "),t("p",[v._v("通过混淆矩阵，我们可以计算出一些常用的分类模型性能指标，如准确率、精确率、召回率和 F1 值等。其中，准确率指分类器正确分类的样本数占总样本数的比例，精确率指被分类器正确分类为正例的样本数占分类器判定为正例的样本数的比例，召回率指被分类器正确分类为正例的样本数占真实正例的样本数的比例，F1 值是精确率和召回率的调和平均数。这些指标可以帮助我们评估分类器的性能和优化分类器的参数：")]),v._v(" "),t("ol",[t("li",[v._v("准确率（Accuracy）：指分类器正确分类的样本数占总样本数的比例。计算公式为：准确率 = (TP+TN)/(TP+FP+TN+FN)。")]),v._v(" "),t("li",[v._v("召回率（Recall）：指被分类器正确分类为正例的样本数占真实正例的样本数的比例。计算公式为：召回率 = TP/(TP+FN)。")]),v._v(" "),t("li",[v._v("精确度（Precision）：指被分类器正确分类为正例的样本数占分类器判定为正例的样本数的比例。计算公式为：精确度 = TP/(TP+FP)。")]),v._v(" "),t("li",[v._v("F1 分数（F1 Score）：是精确度和召回率的调和平均数，是综合评价分类器性能的指标。计算公式为：F1 分数 = 2 * (精确度 * 召回率) / (精确度 + 召回率)。")])]),v._v(" "),t("p",[v._v("这些指标可以帮助我们评估分类器的性能和优化分类器的参数。例如，如果我们希望分类器能够更好地识别正例，我们可以优化召回率；如果我们希望分类器的分类结果更加准确，我们可以优化精确度。在实际应用中，我们通常会综合考虑这些指标，选择最适合我们需求的分类器。")]),v._v(" "),t("h3",{attrs:{id:"回归问题的评估指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回归问题的评估指标"}},[v._v("#")]),v._v(" 回归问题的评估指标")]),v._v(" "),t("p",[v._v("回归问题是指预测连续数值的问题，常见的评估指标包括：")]),v._v(" "),t("ul",[t("li",[v._v("均方误差（Mean Squared Error，MSE）：又叫L2范数损失，是预测值与真实值的差的平方的平均值。")]),v._v(" "),t("li",[v._v("平均绝对误差（Mean Absolute Error，MAE）：又叫L1范数损失，是预测值与真实值的差的绝对值的平均值。")]),v._v(" "),t("li",[v._v("R2得分（R2 score）：预测值与真实值的相关系数的平方，用于评估模型的拟合程度，表示预测值和真实值差值的样本标准差。")])]),v._v(" "),t("h3",{attrs:{id:"无监督学习的评估指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无监督学习的评估指标"}},[v._v("#")]),v._v(" 无监督学习的评估指标")]),v._v(" "),t("p",[v._v("无监督学习是指没有标签的数据集，需要从中发现数据的结构和模式的问题，常见的评估指标包括：")]),v._v(" "),t("ul",[t("li",[v._v("轮廓系数（Silhouette Coefficient）：用于评估聚类的效果，取值范围为[-1,1]，越接近1表示聚类效果越好。")]),v._v(" "),t("li",[v._v("Calinski-Harabasz指数：用于评估聚类的效果，取值越大表示聚类效果越好。")]),v._v(" "),t("li",[v._v("Davies-Bouldin指数：用于评估聚类的效果，取值越小表示聚类效果越好。")])]),v._v(" "),t("p",[v._v("以上是机器学习中分类、回归和无监督学习的常见评估指标，不同的问题需要选择不同的评估指标进行评估。")])])}),[],!1,null,null,null);_.default=a.exports}}]);